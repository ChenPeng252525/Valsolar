<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="refreshStatic">
    <Locals>
      <Local name="l_sMenu" type="string" xsi:type="array" size="1" />
      <Local name="l_sMessage" type="string" xsi:type="array" size="1" />
      <Local name="i" type="num" xsi:type="array" size="1" />
      <Local name="l_nSize" type="num" xsi:type="array" size="1" />
      <Local name="l_bInside" type="bool" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //
  // set the view of the page..
  //
  // SET THE PAGE NUMBER
  // clean the left Side
  for i=0 to 10
    call use:typeLen(0,i," ",19)
  endFor
  use:nPage=210
  // USE <>PROFILE for <>PAGE
  use:nPage=use:nPage+abs(limit(saveData:mode,0,2)-2)
  if cycleStatus:bCycle
    use:nPage=use:nPage+3
  endIf
  // load the menu page
  if saveData:language!="japanese"
    // SET THE VIEW OF THE PAGE
    call language:page(l_sMessage,use:nPage)
    // define the menu
    call use:stringToArray(l_sMessage,sMenu)
  else
    // japanese use the array for the menu
    call language:page(sMenu8,use:nPage)
    call use:stringCopy(sMenu8,sMenu) 
  endIf
  //
  // set the menu
  call use:clear(0,13)
  call trajType:getSizeItem(false,l_nSize)
  //
  //
  if !cycleStatus:bSimulation
    //
    // NOT IN CYCLE
    //
    // CHANGE ICON
    // CHECK THE INDEX 
    // check for the point proximity
    call isAtPoint(nPoint,l_bInside)
    if l_bInside
      sMenu[1]=""
    else
      // clean it
      sMenu[2]=""
    endIf
    // start
    if nPoint<=0
      // previous
      sMenu[0]=""
    endIf
    if nPoint>=l_nSize-1
      // clean it
      sMenu[2]=""
    endIf
    // START
    call use:type(31,13,"START")
  else
    //
    // IN CYCLE
    //
    // STOP
    call use:type(31,13,"STOP ")
    if cycleStatus:bPause
      call use:type(24,13,"RESTART")
    else
      call use:type(24,13,"       ")
    endIf
    // disable << X >>
    sMenu[0]=""
    sMenu[1]=""
    sMenu[2]=""
    sMenu[3]=""
  endIf  
  // set the menu
  if saveData:language!="japanese"
    call use:setMenu(sMenu,true,3)
  else
    call use:setMenu(sMenu,false,3)
  endIf
  call use:getMenu(sMenu,bButton)
  if !cycleStatus:bSimulation
    call isAtPoint(nPoint,l_bInside)
    if !l_bInside
      // actual
      call use:typeMenu(2,"X")
    elseIf nPoint<l_nSize-1
      // next
      call use:typeMenu(3,">>")
    endIf
    if nPoint>0
      // previuos
      call use:typeMenu(1,"<<")
    endIf
    // look for the STEP ENABLING
  elseIf !bStepping and nPoint<(l_nSize-1) and nPoint>0 and taskStatus("stepping")==-1 and !isEmpty()
    call use:typeMenu(2,"STEP")
    bButton[1]=true
  endIf 
  call language:message(l_sMessage,124)
  // START STOP
  bButton[6]=true
  //
end]]></Code>
  </Program>
</Programs>