<?xml version="1.0" encoding="utf-8" ?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2" >
  <Program name="memory_onStop" access="private" >
    <Parameters xmlns="http://www.staubli.com/robotics/VAL3/Param/1" >
      <Parameter name="x_sEvent" type="string" use="reference" xsi:type="array" dimensions="1" />
    </Parameters>
    <Locals>
      <Local name="i" type="num" xsi:type="array" size="1" />
      <Local name="l_nSize" type="num" xsi:type="array" size="1" />
      <Local name="l_nTime" type="num" xsi:type="array" size="1" />
      <Local name="l_sKey" type="string" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //
  // reload all the template...
  l_nTime=clock()
  //
  // find the instruction...
  l_sKey=first(saveData:iInstruction)
  // search it
  while l_sKey!="" and isDefined(saveData:iInstruction[l_sKey])
    switch saveData:iInstruction[l_sKey].nIndex
      case 0
        if instr0:libPath()!=""
          call instr0:onStop(x_sEvent)
        endIf
      break
      case 1
        if instr1:libPath()!=""
          call instr1:onStop(x_sEvent)
        endIf
      break
      case 2
        if instr2:libPath()!=""
          call instr2:onStop(x_sEvent)
        endIf
      break
      case 3
        if instr3:libPath()!=""
          call instr3:onStop(x_sEvent)
        endIf
      break
      case 4
        if instr4:libPath()!=""
          call instr4:onStop(x_sEvent)
        endIf
      break
      case 5
        if instr5:libPath()!=""
          call instr5:onStop(x_sEvent)
        endIf
      break
      case 6
        if instr6:libPath()!=""
          call instr6:onStop(x_sEvent)
        endIf
      break
      case 7
        if instr7:libPath()!=""
          call instr7:onStop(x_sEvent)
        endIf
      break
      case 8
        if instr8:libPath()!=""
          call instr8:onStop(x_sEvent)
        endIf
      break
      case 9
        if instr9:libPath()!=""
          call instr9:onStop(x_sEvent)
        endIf
      break
      case 10
        if instr10:libPath()!=""
          call instr10:onStop(x_sEvent)
        endIf
      break
      case 11
        if instr11:libPath()!=""
          call instr11:onStop(x_sEvent)
        endIf
      break
      case 12
        if instr12:libPath()!=""
          call instr12:onStop(x_sEvent)
        endIf
      break
      case 13
        if instr13:libPath()!=""
          call instr13:onStop(x_sEvent)
        endIf
      break
      case 14
        if instr14:libPath()!=""
          call instr14:onStop(x_sEvent)
        endIf
      break
      case 15
        if instr15:libPath()!=""
          call instr15:onStop(x_sEvent)
        endIf
      break
      case 16
        if instr16:libPath()!=""
          call instr16:onStop(x_sEvent)
        endIf
      break
      case 17
        if instr17:libPath()!=""
          call instr17:onStop(x_sEvent)
        endIf
      break
      case 18
        if instr18:libPath()!=""
          call instr18:onStop(x_sEvent)
        endIf
      break
      case 19
        if instr19:libPath()!=""
          call instr19:onStop(x_sEvent)
        endIf
      break
      case 20
        if instr20:libPath()!=""
          call instr20:onStop(x_sEvent)
        endIf
      break
      case 21
        if instr21:libPath()!=""
          call instr21:onStop(x_sEvent)
        endIf
      break
      case 22
        if instr22:libPath()!=""
          call instr22:onStop(x_sEvent)
        endIf
      break
      case 23
        if instr23:libPath()!=""
          call instr23:onStop(x_sEvent)
        endIf
      break
      case 24
        if instr24:libPath()!=""
          call instr24:onStop(x_sEvent)
        endIf
      break
      case 25
        if instr25:libPath()!=""
          call instr25:onStop(x_sEvent)
        endIf
      break
      case 26
        if instr26:libPath()!=""
          call instr26:onStop(x_sEvent)
        endIf
      break
      case 27
        if instr27:libPath()!=""
          call instr27:onStop(x_sEvent)
        endIf
      break
      case 28
        if instr28:libPath()!=""
          call instr28:onStop(x_sEvent)
        endIf
      break
      case 29
        if instr29:libPath()!=""
          call instr29:onStop(x_sEvent)
        endIf
      break
    endSwitch
    l_sKey=next(saveData:iInstruction[l_sKey])
    delay(0)
  endWhile
  if x_sEvent=="kill"
    // load the template for the session
    instr0:libLoad("Disk://../templates/instruction")
    delay(0)
    instr1:libLoad("Disk://../templates/instruction")
    delay(0)
    instr2:libLoad("Disk://../templates/instruction")
    delay(0)
    instr3:libLoad("Disk://../templates/instruction")
    delay(0)
    instr4:libLoad("Disk://../templates/instruction")
    delay(0)
    instr5:libLoad("Disk://../templates/instruction")
    delay(0)
    instr6:libLoad("Disk://../templates/instruction")
    delay(0)
    instr7:libLoad("Disk://../templates/instruction")
    delay(0)
    instr8:libLoad("Disk://../templates/instruction")
    delay(0)
    instr9:libLoad("Disk://../templates/instruction")
    delay(0)
    instr10:libLoad("Disk://../templates/instruction")
    delay(0)
    instr11:libLoad("Disk://../templates/instruction")
    delay(0)
    instr12:libLoad("Disk://../templates/instruction")
    delay(0)
    instr13:libLoad("Disk://../templates/instruction")
    delay(0)
    instr14:libLoad("Disk://../templates/instruction")
    delay(0)
    instr15:libLoad("Disk://../templates/instruction")
    delay(0)
    instr16:libLoad("Disk://../templates/instruction")
    delay(0)
    instr17:libLoad("Disk://../templates/instruction")
    delay(0)
    instr18:libLoad("Disk://../templates/instruction")
    delay(0)
    instr19:libLoad("Disk://../templates/instruction")
    delay(0)
    instr20:libLoad("Disk://../templates/instruction")
    delay(0)
    instr21:libLoad("Disk://../templates/instruction")
    delay(0)
    instr22:libLoad("Disk://../templates/instruction")
    delay(0)
    instr23:libLoad("Disk://../templates/instruction")
    delay(0)
    instr24:libLoad("Disk://../templates/instruction")
    delay(0)
    instr25:libLoad("Disk://../templates/instruction")
    delay(0)
    instr26:libLoad("Disk://../templates/instruction")
    delay(0)
    instr27:libLoad("Disk://../templates/instruction")
    delay(0)
    instr28:libLoad("Disk://../templates/instruction")
    delay(0)
    instr29:libLoad("Disk://../templates/instruction")
    delay(0)
  endIf
  //
  if saveData:bDebug
    logMsg("[DEBUG] MEMORY:Charged all onStop function using time: "+toString(".3",clock()-l_nTime))
  endIf
end]]></Code>
  </Program>
</Programs>