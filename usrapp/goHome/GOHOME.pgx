<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="GOHOME" access="public">
    <Locals>
      <Local name="l_bInBoxOK" type="bool" xsi:type="array" size="1" />
      <Local name="l_bFindInbox" type="bool" xsi:type="array" size="1" />
      <Local name="l_bInBox1" type="bool" xsi:type="array" size="1" />
      <Local name="l_nSize" type="num" xsi:type="array" size="1" />
      <Local name="i" type="num" xsi:type="array" size="1" />
      <Local name="l_tTool" type="tool" xsi:type="array" size="1" />
      <Local name="l_bInPos" type="bool" xsi:type="array" size="1" />
      <Local name="l_bIsHome" type="bool" xsi:type="array" size="1" />
      <Local name="l_sLoadBox" type="string" xsi:type="array" size="1" />
      <Local name="l_pHere" type="point" xsi:type="array" size="1" />
      <Local name="l_pPoint" type="point" xsi:type="array" size="1" />
      <Local name="l_bReturnOK" type="bool" xsi:type="array" size="1" />
      <Local name="l_nCount" type="num" xsi:type="array" size="1" />
      <Local name="l_pCurrent" type="point" xsi:type="array" size="1" />
      <Local name="m" type="num" xsi:type="array" size="1" />
      <Local name="k" type="num" xsi:type="array" size="1" />
      <Local name="l_sItem" type="string" xsi:type="array" size="1" />
      <Local name="l_sItem1" type="string" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  call language2:message(sHomingStatus,57)
  l_bFindInbox=false
  l_bInBox1=false
  l_bInBoxOK=false
  bFindInBox1=false
  resetMotion()
  //类型1搜索...
  call getBoxSize(1,l_nSize)
  if l_nSize!=0
    
    resize(bFindInBox1,1,l_nSize)
    resize(sBox1,1,l_nSize)
    sBox1=""
   
      for i=0 to l_nSize-1
        call getEvent(sBox1[i],i,1)
      endFor 
       if sBox1!=""
      for i=0 to l_nSize-1
        call getTrajTool(l_tTool,sml:box[sBox1[i]].nIndexGun )
        call FCheckInBox1Pos(l_tTool,world,l_bInPos,sml:box[sBox1[i]].nKeySafeNum,sml:box[sBox1[i]].nTolKeySafeNum)
        if l_bInPos
          bFindInBox1[i]=true
          l_bInBoxOK=true
        else
          bFindInBox1[i]=false
        endIf
        
      endFor
      call FNearJt(jHome:tTraj["home"].tData.jJoint[size(jHome:tTraj["home"].tData)-1],3,l_bIsHome)
      if l_bInBoxOK and !l_bIsHome 
        call IsInTheSameBox(bFindInBox1,l_sLoadBox,l_bInBox1)
        if l_bInBox1
          call getTrajTool(l_tTool,sml:box[l_sLoadBox].nIndexGun )
          //在设定的区域?
          call language2:message(l_sItem,55)
          call language2:message(l_sItem1,56)
          sHomingStatus=l_sItem+l_sLoadBox+l_sItem1
          switch sml:box[l_sLoadBox].nToSafePtType
            case 1
              l_bFindInbox=true
              l_pHere=here(l_tTool,world)
              l_pPoint=l_pHere
              l_pPoint.trsf.z=sml:box[l_sLoadBox].nToSafeFrmZ
              movel(l_pPoint,l_tTool,mHomeSpd)
              waitEndMove()
            break
            case 2
              l_bFindInbox=true
              if !sml:box[l_sLoadBox].bReverse_Tool_Z 
                l_pHere=here(l_tTool,world)
                l_pPoint=appro(l_pHere,{0,0,-sml:box[l_sLoadBox].nRe_Tool_Z_Dits,0,0,0})
                movel(l_pPoint,l_tTool,mHomeSpd)
                waitEndMove()
              else
                l_bReturnOK=false
                if sml:box[l_sLoadBox].bMountOnWall==false
                  nSign=1
                else
                  nSign=-1
                endIf
                do
                  l_pHere=here(l_tTool,world)
                  if l_pHere.trsf.z<=sml:box[l_sLoadBox].nRe_Tool_Z_WrdZ
                    movel(appro(l_pHere,{0,0,-1*nSign*100,0,0,0}),l_tTool,mHomeSpd)
                    l_nCount=l_nCount+1
                    do
                      l_pCurrent=here(l_tTool,world)
                    until l_pCurrent.trsf.z>=sml:box[l_sLoadBox].nRe_Tool_Z_WrdZ or isEmpty()
                    if l_pCurrent.trsf.z>=sml:box[l_sLoadBox].nRe_Tool_Z_WrdZ
                      l_bReturnOK=true
                    endIf
                  else
                    movel(appro(l_pHere,{0,0,nSign*100,0,0,0}),l_tTool,mHomeSpd)
                    l_nCount=l_nCount+1
                    do
                      l_pCurrent=here(l_tTool,world)
                    until l_pCurrent.trsf.z<=sml:box[l_sLoadBox].nRe_Tool_Z_WrdZ or isEmpty()
                    if l_pCurrent.trsf.z<=sml:box[l_sLoadBox].nRe_Tool_Z_WrdZ
                      l_bReturnOK=true
                    endIf
                  endIf
                until l_nCount==10 or l_bReturnOK==true
                stopMove()
                resetMotion()
              endIf
            break
            case 3
              //              if nCurrentUseType==Box1Pts:nToolType
              l_bFindInbox=true
              for m=0 to size(sml:box[l_sLoadBox].pToSafePt)-1
                movel(sml:box[l_sLoadBox].pToSafePt[m],l_tTool,mHomeSpd)
              endFor
              //              endIf
            break
          endSwitch
          // if sml:box[l_sLoadBox].nToSafePtType!=3 or (sml:box[l_sLoadBox].nToSafePtType==3 and cycleStatus:nCurrentUseTool==Box1Pts:nToolType)
          //      if sml:box[l_sLoadBox].nToSafePtType!=3 
          for k=0 to size(sml:box[l_sLoadBox].jToHome)-1
            if sml:box[l_sLoadBox].bMoveJHomeJoint[k]
              movej(sml:box[l_sLoadBox].jToHome[k],l_tTool,mHomeSpd)
            else
              l_pPoint=jointToPoint(l_tTool,world,sml:box[l_sLoadBox].jToHome[k])
              movel(l_pPoint,l_tTool,mHomeSpd)
            endIf
          endFor
          //      endIf
          waitEndMove()
        endIf  
      endIf
    endIf
  endIf 
  //类型2搜索...
  if  l_bFindInbox==false
    call getBoxSize(2,l_nSize)
    if l_nSize!=0
      resize(sBox2,1,l_nSize)
      sBox2=""
      for i=0 to l_nSize-1
        call getEvent(sBox2[i],i,2)
      endFor 
      if sBox2!=""
        for i=0 to l_nSize-1
          l_sLoadBox=sBox2[i]
          call getTrajTool(l_tTool,big:box[l_sLoadBox].nIndexGun )
          call FCheckInBox2Pos(l_tTool,world,l_bInPos,big:box[l_sLoadBox].bJtEnabCheck,big:box[l_sLoadBox].bPosEnabCheck,big:box[l_sLoadBox].nRobCtrlHJtsNum,big:box[l_sLoadBox].nRobCtrlAreaNum)
          call FNearJt(jHome:tTraj["home"].tData.jJoint[size(jHome:tTraj["home"].tData)-1],3,l_bIsHome)
          if l_bInPos and !l_bIsHome
            //在设定的区域?
            call language2:message(l_sItem,68)
            call language2:message(l_sItem1,56)
            sHomingStatus=l_sItem+l_sLoadBox+l_sItem1
            l_bFindInbox=true
            for k=0 to size(big:box[l_sLoadBox].jToHome)-1
              if big:box[l_sLoadBox].bMoveJHomeJoint[k]
                movej(big:box[l_sLoadBox].jToHome[k],l_tTool,mHomeSpd)
              else
                l_pPoint=jointToPoint(l_tTool,world,big:box[l_sLoadBox].jToHome[k])
                movel(l_pPoint,l_tTool,mHomeSpd)
              endIf
            endFor
            waitEndMove()
          endIf
          
        endFor
      endIf 
    endIf 
  endIf 
  if !l_bFindInbox
    call language2:message(sHomingStatus,67)
    delay(1)
  endIf
  cycleStatus:bHoming=false
  
  resetMotion()
end]]></Code>
  </Program>
</Programs>